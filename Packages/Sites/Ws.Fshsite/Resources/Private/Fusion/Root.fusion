##
# Create shorthand namespace for our site package name.
# It is available in all included typoscript files.
#

include: ./**/*.fusion

/**
 * Root TypoScript template for the Neos demo website
 */


// default < Ws.Fshsite:AbstractPage

// Special page layout with less navigation components
landingPage < page
landingPage.body {
	// Hide breadcrumb on landing pages
	parts.breadcrumb >
	landingPage = ${true}
}

// SJ With Sidebar
sidebar < page
sidebar {
	bodyTag.attributes.class = 'sidebar'
	body {
		templatePath = 'resource://Ws.Fshsite/Private/Templates/Page/Sidebar.html'
		title = ${q(node).property('title')}
		title.@process.convertUris = Neos.Neos:ConvertUris
	}
}

// SJ Homepage
// homepage < "Hello"
/*homepage {
	bodyTag.attributes.class = 'homepage'
	body {
		templatePath = 'resource://Ws.Fshsite/Private/Templates/Page/Homepage.html'
		title = ${q(node).property('title')}
		title.@process.convertUris = Neos.Neos:ConvertUris
	}
}*/

// Special layout for chapter nodes
chapter < page
chapter {
	bodyTag.attributes.class = 'chapter'
	body {
		templatePath = 'resource://Ws.Fshsite/Private/Templates/Page/Chapter.html'
		title = ${q(node).property('title')}
		title.@process.convertUris = Neos.Neos:ConvertUris

		// Get the previous chapter by traversing to the node which preceds the current one.
		// We need to specify the nodetype because there could be other node types like content collections on the same level.
		previousChapter = ${q(documentNode).prev('[instanceof Neos.Neos:Document]').get(0)}
		nextChapter = ${q(documentNode).next('[instanceof Neos.Neos:Document]').get(0)}
	}
}

print < page
print {
	head {
		stylesheets.printCss = Neos.Fusion:Tag {
			@position = 'end 10'
			tagName = 'link'
			attributes {
				media = 'all'
				rel = 'stylesheet'
				href = Neos.Fusion:ResourceUri {
					path = 'resource://Ws.Fshsite/Public/Styles/Print.css'
				}
			}
		}
	}
}


##
# SJ HomeGrid
#
prototype(Ws.Fshsite:HomeGrid) < prototype(Neos.Neos:Content) {
	attributes.class = 'container sj-homegrid'
    templatePath = 'resource://Ws.Fshsite/Private/Templates/NodeTypes/HomeGrid.html'
	columns.iterationName = 'multiColumnIteration'
    headline1 = ${q(node).property('headline1')}
	headline2 = ${q(node).property('headline2')}
	headline3 = ${q(node).property('headline3')}
    headline4 = ${q(node).property('headline4')}
	headline5 = ${q(node).property('headline5')}
	headline6 = ${q(node).property('headline6')}
	headline7 = ${q(node).property('headline7')}
	headline8 = ${q(node).property('headline8')}
	link = ${q(node).property('link')}
	link2 = ${q(node).property('link2')}
	link3 = ${q(node).property('link3')}
	link4 = ${q(node).property('link4')}
	link5 = ${q(node).property('link5')}
	link6 = ${q(node).property('link6')}
	link7 = ${q(node).property('link7')}
    text = ${q(node).property('text')}
	text2 = ${q(node).property('text2')}
	text3 = ${q(node).property('text3')}
	text4 = ${q(node).property('text4')}
}

##
# SJ Yellow Box
#
prototype(Ws.Fshsite:Quote) < prototype(Neos.Neos:Content) {
        attributes.class = 'sj-quote'
        templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/Quote.html'
        quote = ${q(node).property('quote')}
        author = ${q(node).property('author')}
}

##
# SJ Adjust "MultiColumn" element to Zurb Foundation CSS classes
#
#prototype(Neos.NodeTypes:MultiColumn) {
#	attributes.class = 'row'
#	columns.iterationName = 'multiColumnIteration'
#}

##
# SJ Adjust "MultiColumnItem" element to Zurb Foundation CSS classes
#
#prototype(Neos.NodeTypes:MultiColumnItem) {
#	attributes.class = ${'col-' + q(node).parent().property('screen') + '-' + #String.split(q(node).parent().property('layout'), '-')[multiColumnIteration.index] + ' #columns'}
#
#}

##
# SJ Shariff Buttons von Networkteam
#
prototype(Ws.Fshsite:socialButtons) {
    socialButtons = Networkteam.Neos.Shariff:Shariff
}

prototype(Networkteam.Neos.Shariff:Shariff) {
    attributes {
        // Put additional attributes here, see https://github.com/heiseonline/shariff#options-data-attributes
         data-theme = 'white'
	 data-backend-url = 'null'
    }
}

prototype(Neos.NodeTypes:Text) {
	attributes.class = 'container sj-small-container'
}
prototype(Neos.NodeTypes:Headline) {
	attributes.class = 'container sj-small-container'
}
prototype(Neos.NodeTypes:Image) {
	attributes.class = 'container sj-small-container'
}
prototype(Neos.NodeTypes:MultiColumn) {
	attributes.class = 'container sj-small-container'
}
prototype(Flowpack.SearchPlugin:Search) {
	attributes.class = 'container sj-small-container'
}
prototype(Neos.NodeTypes:Form) {
	attributes.class = 'container'
}
prototype(Flowpack.Neos.FrontendLogin:LoginForm) {
	attributes.class = 'container sj-small-container'
}
# Menu TS Object - extends Neos.Neos:Menu and is rendering menus inserted as content elements
prototype(Neos.NodeTypes:Menu) {
	attributes.class = 'container sj-small-container'
}
prototype(Neos.NodeTypes:AssetList)  {
	attributes.class = 'container sj-small-container'
}
prototype(DL.Gallery:Gallery) {
	attributes.class = 'container sj-small-container'
}


##
# SJ FullWidth Area
#
prototype(Ws.Fshsite:FullWidth) < prototype(Neos.Neos:Content) {
        templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/FullWidth.html'

        headline = ${q(node).property('headline')}
        subheadline = ${q(node).property('subheadline')}
        text = ${q(node).property('text')}
        image = ${q(node).property('image')}
}

##
# SJ LogoArea
#
prototype(Ws.Fshsite:LogoArea) < prototype(Neos.Neos:Content) {
    templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/LogoArea.html'
	columns.iterationName = 'multiColumnIteration'
    image1 = ${q(node).property('image1')}
    image2 = ${q(node).property('image2')}
    image3 = ${q(node).property('image3')}
    beschreibung1 = ${q(node).property('beschreibung1')}
    beschreibung2 = ${q(node).property('beschreibung2')}
    beschreibung3 = ${q(node).property('beschreibung3')}
	link1 = ${q(node).property('link1')}
	link2 = ${q(node).property('link2')}
	link3 = ${q(node).property('link3')}
}

##
# SJ 3-Col Quicklinks
#
prototype(Ws.Fshsite:QuickLinks) < prototype(Neos.Neos:Content) {
    templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/QuickLinks.html'
	columns.iterationName = 'multiColumnIteration'
    headline1 = ${q(node).property('headline1')}
    headline2 = ${q(node).property('headline2')}
    headline3 = ${q(node).property('headline3')}
    text1 = ${q(node).property('text1')}
	text2 = ${q(node).property('text2')}
	text3 = ${q(node).property('text3')}
    image1 = ${q(node).property('image1')}
    image2 = ${q(node).property('image2')}
    image3 = ${q(node).property('image3')}
	link1 = ${q(node).property('link1')}
	link2 = ${q(node).property('link2')}
	link3 = ${q(node).property('link3')}
}

##
# SJ ElasticSearch
#
#prototype(Neos.Neos:DocumentSearchResult)  {
#    templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/CustomDocumentSearchResult.html'
#}

prototype(JohannesSteu.Neos.NodeTypes:Accordeon) {
	attributes.class = 'container sj-accordeon accordeon sj-small-container'
}

##
# SJ Button
#
prototype(Ws.Fshsite:Button) < prototype(Neos.Neos:Content) {
    templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/Button.html'
    text = ${q(node).property('text')}
    link = ${q(node).property('link')}
    buttonClassName = ${q(node).property('alignment') ? ('sj-button-' + q(node).property('alignment')) : ''}
}

##
# SJ MenuLink for Node menuContent
#
prototype(Ws.Fshsite:MenuLink) < prototype(Neos.Neos:Content) {
        templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/MenuLink.html'
        text = ${q(node).property('text')}
        image = ${q(node).property('image')}
        beschreibung = ${q(node).property('beschreibung')}
        link = ${q(node).property('link')}
}

##
# SJ ColorArea
#
prototype(Ws.Fshsite:ColorArea) < prototype(Neos.Neos:Content) {
    @context.classname = 'colorarea'

    classname = ${classname}

    attributes.class = ${classname}
    attributes.data-accordeon = ""
    attributes.class.@process.nodeType >

    content = Neos.Neos:ContentCollection {
        attributes.class = ${classname + "__content-collection"}
        nodePath = ${q(node).children('content').property('_path')}
        collection = ${q(node).children('content').children()}
    }
}

##
# SJ VideoFrame
#
prototype(Ws.Fshsite:Video) < prototype(Neos.Neos:Content) {
    templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/VideoFrame.html'
    video = ${q(node).property('video')}
}

##
# SJ Space
#
prototype(Ws.Fshsite:Space) < prototype(Neos.Neos:Content) {
    @context.classname = 'space'

    classname = ${classname}

    attributes.class = 'space container sj-small-container'
    attributes.data-accordeon = ""
    attributes.class.@process.nodeType >

    content = Neos.Neos:ContentCollection {
        attributes.class = ${classname + "__content-collection"}
        nodePath = ${q(node).children('content').property('_path')}
        collection = ${q(node).children('content').children()}
    }
}

##
# SJ Order
#
prototype(Neos.NodeTypes:Form) {
    attributes.class = 'container sj-small-container'
}

##
# SJ JohannesSteu Accordeon
#
prototype(Neos.Neos:Page) {
    head.stylesheets.accordeon = Neos.Fusion:Tag {
        @position = 'start'
    }
}

##
# SJ JohannesSteu Code for search page
#
prototype(Flowpack.SearchPlugin:Search) {
    templatePath = 'resource://Ws.Fshsite/Private/Templates/TypoScriptObjects/Search.html'

    searchResultRenderer.@process.wrap >
    prototype(Flowpack.SearchPlugin:SingleResult).@process.wrap >
}

prototype(Neos.Neos:DocumentSearchResult) < prototype(Neos.Fusion:Template) {
    templatePath = 'resource://Ws.Fshsite/Private/Templates/NodeTypes/DocumentSearchResult.html'
    teaserImage = ${q(node).property('image')}
    title = ${q(node).property('title')}
    headline = ${q(node).property('headline')}
}


